# tutorial code for uniaxial tensile loading

# variables
variable n_iter equal 20000

# -------------------------------- initialization --------------------------------
units               metal
dimension           3
boundary            p p p
atom_style          atomic 
variable            latparam equal 4.05

# atom definition
lattice             fcc ${latparam} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
region              whole block 0 10 0 10 0 10
create_box          1 whole
create_atoms        1 region whole

# interatomic potential
pair_style          eam/alloy
pair_coeff          * * Al99.eam.alloy Al

# define computes
compute             csym all centro/atom fcc
compute             peratom all pe/atom

# EQUILIBRATION
reset_timestep      0
timestep            0.001
velocity            all create 300 12345 mom yes rot no
fix                 1 all npt temp 300 300 1 iso 0 0 1 drag 1 

# Set thermo output
thermo              1000
thermo_style        custom step lx ly lz press pxx pyy pzz pe temp

# Run for at least 10 picosecond (assuming 1 fs timestep)
run                 ${n_iter}
unfix               1

# Store final cell length for strain calculations
variable            tmp equal "lx"
variable            L0 equal ${tmp}
print               "Initial Length, L0: ${L0}"

# DEFORMATION
reset_timestep      0

fix                 1 all npt temp 300 300 1 y 0 0 1 z 0 0 1 drag 1
variable            srate equal 1.0e10
variable            srate1 equal "v_srate / 1.0e12"
fix                 2 all deform 1 x erate ${srate1} units box remap x

# Output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa]
# p2, p3, p4 are in GPa
variable            strain equal "(lx - v_L0)/v_L0"
variable            p1 equal "v_strain"
variable            p2 equal "-pxx/10000"
variable            p3 equal "-pyy/10000"
variable            p4 equal "-pzz/10000"
fix                 def1 all print 100 "${p1} ${p2} ${p3} ${p4}" file Al_tens_100.def1.txt screen no

dump                1 all cfg 250 dump.tens_*.cfg mass type xs ys zs c_csym c_peratom fx fy fz
dump_modify         1 element Al

# Display thermo
thermo              1000
thermo_style        custom step v_strain temp v_p2 v_p3 v_p4 ke pe press
run                 ${n_iter}

print               "All done"

########################################################################################### 

# the units metal command sets the default unit of time to time = picoseconds (i.e., 1e-12 s). 
# Depending on your potential, your type of simulation, etc., the timestep can assume a range of 
# values, but for the purposes of this simulation, we define a timestep of 1 fs (1e-15 s), so 
# this LAMMPS script simply uses timestep 0.001 (the picosecond is assumed).

# Now, we want a strain rate of 1.0e10 1/s. So, srate is a variable of the strain rate that is 
# wanted. But, we need it in the default unit of picoseconds, so we do a simple unit conversion 
# to obtain srate1, i.e., seconds to picoseconds means multiplying by 1e-12 ps/s, which is 
# also 1/1e12 ps/s. So, then srate1 is fed into the fix deform command.

# Per the command above, the erate is defined. To calculate the change in length L as a 
# function of time L(t), LAMMPS calculates this using L(t) = L0 (1 + erate*dt) where dt is the 
# timestep. This command assumes that the timestep is going to be defined via the separate 
# timestep command.

#############################################################################################

