# TUTORIAL SCRIPT FOR UNIAXIAL COMPRESSION 

# initiaization
units           metal
dimension       3
boundary        p p p
atom_style      atomic 
variable        latparam equal 4.05

# atom definitions 
lattice         fcc ${latparam} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
region          whole block 0 10 0 10 0 10
create_box      1 whole 
create_atoms    1 region whole 

# define interatomic potential
pair_style      eam/alloy 
pair_coeff      * * Al99.eam.alloy Al 

# define computes 
compute         csym all centro/atom fcc 
compute         peratom all pe/atom 

# equlibration
reset_timestep  0
timestep        0.001 
velocity        all create 300 12345 mom yes rot no 
fix             1 all npt temp 300 300 1 iso 0 0 1 drag 1 
run             10000 
unfix           1 

# store final cell length for strain calculations 
variable        tmp equal "lx"
variable        L0 equal ${tmp} 
print           "initial length, L0 : ${L0}"

# deformation 
reset_timestep  0
fix             1 all npt temp 300 300 1 y 0 0 1 z 0 0 1 drag 1
variable        srate equal 1.0e10
variable        srate1 equal "-v_srate / 1.0e12"
fix             2 all deform 1 x erate ${srate1} units box remap x 

# Output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa]
# p2, p3, p4 are in GPa
variable        strain equal "(lx - v_L0)/v_L0"
variable        p1 equal "v_strain"
variable        p2 equal "-pxx/10000"
variable        p3 equal "-pyy/10000"
variable        p4 equal "-pzz/10000"
fix             def1 all print 100 "${p1} ${p2} ${p3} ${p4}" file Al_comp_100.def1.txt screen no

# Use cfg for AtomEye
dump            1 all cfg 250 dump.comp_*.cfg mass type xs ys zs c_csym c_peratom fx fy fz
dump_modify     1 element Al

# Display thermo
thermo          1000
thermo_style    custom step v_strain temp v_p2 v_p3 v_p4 ke pe press

run             10000

# SIMULATION DONE
print           "All done"
